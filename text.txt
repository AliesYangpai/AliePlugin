1.广播是怎样跨进程通信的？
2.广播插件化的实现方案？
2.1在插件中实现广播接收
2.2广播没有生命周期
1.静态广播与动态广播的区别
2.静态广播是在什么时段被注册的
3.手机apk安装原理
4.反射获取android系统四大组件
5.PMS服务安装原理
6.插件中的广播接受者怎样接收到主app发出的广播呢？
	
广播的特性：
1.动态注册
2.静态注册
3.广播是没有生命周期的	

4.插件化广播动态注册 
  收到activity生命周期的约束，如果不需要的时候，可以unregister
 4.1在插件中发送一条广播，之后再插件中接收这条广播
 重写registerReceiver
 

5.插件化广播静态注册
1.内存消耗较高，因为是常驻在进程中的 
6.静态广播是什么时候加载到内存中的呢？
app启动的时候加载的呢？还是手机启动的时候？


应用自启动实现原理：
监听手机系统广播action，按照这个说法，那么广播的注册就是 在手机启动时，发出action之前，机已经在内存中完成注册了，
因此，静态广播 是手机启动的时候就加载到内存中了，并且是在手机发出系统action之前，那么手机启动的时候都干了什么事情呢？
手机启动：
手机启动时怎样注册广播呢？第一步肯定是要先安装apk啦
因此，在安装apk的时候，到底做了什么事情？
（apk的安装原理）

1.apk的安装方式：
2.apk安装时具体做了什么事情？这个与静态广播有什么关系呢？
 2.1复制apk文件到 data/app目录下
 2.2开辟存放应用文件的数据 data/data/包名
 2.3将apk中的dex文件安装到data/dalvik-cache目录下
2.2和广播有什么关系呢？
 首先，android系统启动的时候，会将所有的已经安装的应用都再次安装一遍（这里的安装指的是讲apk文件加载到内存中去），这也是为什么android启动的时候 速度很慢的原因，而广播的加载也是发生在系统启动的过程中
 之后会把 什么activity、broadcast这些组件加载到内存
3.如何查看安装的入口呢？

一个apk的入口就是AndroidManifest.xml
PMS服务: 系统应用以及三方医用都是通过pms安装的，这里的安装指的是，将每个apk文件加载到内存中区
 
所以综上所述，静态广播的注册时机是apk在安装的时候就完成了，也就是说，在插件化开发的时候，当插件apk加载完毕的时候，PMS扫描清单文件，静态广播就已经完成注册了
不同于动态广播，静态广播是不用调用register方法的，可是由于之前说当apk加载完毕后，静态广播才会被注册，可是，PMS怎么知道哪些是静态广播么？当然是我们在清单文件
中进行<reciver/>声明啦，之后自动注入到系统内存。
因此，系统启动的时候，pms就会解析所有apk的清单文件，
那么PMS的运行过程又是这样的呢？
1.PMS Main 被systemService系统级服务调用
2.实例化一个PMS对象 
  main函数调用scanDirLI扫描apk安装的文件夹，遍历判断是否为apk文件
  --->scanPackageLI进行解析，主要类是PackageParser(),这个类是专门去解析apk的，在PackageParser.Package这个类中我们看到了组件，权限等
  这里我们就可以看到了，AndroidManifest.xml中的声明标签都会被解析到PackageParser.Package这里 记住这个啊~~
  

微信----就相当于一个系统了，因为它能管理海量小程序
同样
我们的宿主apk也能管理海量插件  
  
 
我的问题：
1.不是说要在主module发送广播，之后插件apk中接收广播吗？ 