插桩式实现支付宝纳入海量应用架构
案例举例：
支付宝中有很多功能 比如 淘票票 滴滴出行等，这些并非是开发时候就集成进去的而是
插件化或webview来实现的，所以第一次加载会比较慢~

1.组件化与插件化：
  1.1组件化：多module单apk，合并打包
     缺点：具有一定程度耦合性，a变了b一定程度上会有改变
     优势：无兼容性问题，跳转简易（相对于插件化）
  1.2插件化：多module多apk，分开打包，一个宿主apk（Main module），一票插件apk（Plugin module）
     缺点：存在兼容性问题
     优势：宿主apk与插件apk可分开开发各自的apk，互不影响
           解决方法爆棚 65535
           可进行动态插件更新		   
2.实现过程：
  2.1思路：
     由于plugin apk是没有加载到虚拟机的，因此，
	 2.1.1下载apk
	 2.1.2加载apk中launcher信息
	 2.1.3标准架构传入宿主context
	 2.1.4插桩activity完成plugin apk生命周期控制
  2.2实现步骤：
     2.2.1创建架构标准module
     2.2.2plugin modlue 与主module 实现此依赖此标准	 


3.plugin插件中如何进行界面跳转
 思考：
    startActivity(new Intent(that,SceondActivity.class));
	这样做是肯定不行的，因为这个SceondActivity 在apk中根本没有安装，没有安装就意味着，这个activity没有被系统注入上下文（这里偏源码一点）
	因此，肯定也是没有被系统注册过，因此这么搞肯定是不行的
 方案：重写startActivity
 
 思路：
 桩1（加载plugin的主界面）-------------->桩2（加载plugin的第二界面）	 
4.怎样接入别的apk呢（动态替换）	 
	 
======================================================================
我的问题：
1.如何理解插桩式控制
答：由于plugin apk最开始并未加载到虚拟机中，因此当 插件apk加载完成之后，我们需要
在宿主module中创建一个 "壳或桩"Activity，在这里面来实现plugin Activity，在这里面来实现plugin生命周期的控制。
2.总说插件华开发含有兼容性问题，这个兼容性问题到底是什么？（待定）
3.android 9.0 不能进行插件化了吗？（待定）
4.为什么要在桩activity中重写 geClassLoader和getResorce
答：getClassLoader和getResource是一个activity的必要要素（类加载器和资源），因此必须要重写
5.classLoader需要进行详解
答：DexClassLoader(String dexPath, String optimizedDirectory, String librarySearchPath, ClassLoader parent)
  dexPath：可以是一个apk结尾的路径
  optimizedDirectory： 这是个缓存目录，因为虚拟机要加载apk的时候会讲apk缓存到缓存目录中
  librarySearchPath：依赖库的路径 可选，如果不指定，则依赖于dexPath
  parent：classLoader对象 

开发中的问题：
1.resource实例化的时候需要传入AssetManager，而实例化AssetManager的时候必须要使用反射，为什么？？？
答：因为被apha @Hide 注解注释了，所以此处要使用反射 
2.PluginManager.getInstance().getPackageInfo().activities
中activities[0].name索引为0的那个Activity那么并非是launcher，可能是BaseActivity，
因此只有遍历出来那个是launcher了才能加载，否则会加载失败
3.插件化开发在AccompatActivity的them兼容性问题，如何处理？
答：规避方案1：换成activity 
4.插件化的界面跳转理解：
实际上这是一个主activity跳转到桩activity的操作，桩activity中得到classLoader并得到 apk中的一个activity信息而已，并且展示出来，
万万要注意，这里并非apk融合


我的总结：
1.插件化的场景：我认为插件化所负责是另一领域的apk，来接到这个宿主apk这个大板子上，而
组件化开发的更多效果是 在这个板子自身上完成的拼图
2.apk加载到虚拟机之前不可进行反射
3.如何区分webView？
设置-->打开布局边界，源生控件则含有布局边界，webview则无边界  

